

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Nov 17 18:54:20 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC10F220 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     status equ 03h
    44  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 180 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 200 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
    98                           OSCCAL equ 05h ;# 
    99  0005                     # 271 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
   100                           GPIO equ 06h ;# 
   101  0006                     # 309 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
   102                           ADCON0 equ 07h ;# 
   103  0007                     # 391 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic10f220.h"
   104                           ADRES equ 08h ;# 
   105  0008                     	FNROOT	_main
   106                           	global	_GPIO
   107                           _GPIO	set	0x6
   108  0006                     	global	_TRISGPIO
   109                           _TRISGPIO	set	0x6
   110  0006                     	global	_OSCCALbits
   111                           _OSCCALbits	set	0x5
   112  0005                     	global	_OPTION
   113                           _OPTION	set	0x0
   114  0000                     ; #config settings
   115                           global __CFG_IOSCFS$8MHZ
   116                           __CFG_IOSCFS$8MHZ equ 0x0
   117  0000                     global __CFG_MCPU$ON
   118                           __CFG_MCPU$ON equ 0x0
   119  0000                     global __CFG_WDTE$OFF
   120                           __CFG_WDTE$OFF equ 0x0
   121  0000                     global __CFG_CP$OFF
   122                           __CFG_CP$OFF equ 0x0
   123  0000                     global __CFG_MCLRE$ON
   124                           __CFG_MCLRE$ON equ 0x0
   125  0000                     	file	"C:\Users\flyhi\AppData\Local\Temp\sqto."
   126                           	line	#
   127                           psect cinit,class=ENTRY,delta=2
   128                           global start_initialization
   129                           start_initialization:
   130  001                     
   131                           global __initialization
   132                           __initialization:
   133  001                     psect cinit,class=ENTRY,delta=2,merge=1
   134                           global end_of_initialization,__end_of__initialization
   135                           
   136                           ;End of C runtime variable initialization code
   137                           
   138                           end_of_initialization:
   139  001                     __end_of__initialization:
   140  001                     clrf fsr
   141  001  064                ljmp _main	;jump to C main() function
   142  002  A03                psect	cstackBANK0,class=BANK0,space=1,noexec
   143                           global __pcstackBANK0
   144                           __pcstackBANK0:
   145  010                     ?_main:	; 2 bytes @ 0x0
   146  010                     main@argc:	; 2 bytes @ 0x0
   147  010                     	ds	2
   148  010                     main@argv:	; 2 bytes @ 0x2
   149  012                     	ds	2
   150  012                     ??_main:	; 1 bytes @ 0x4
   151  014                     	ds	3
   152  014                     ;!
   153                           ;!Data Sizes:
   154                           ;!    Strings     0
   155                           ;!    Constant    0
   156                           ;!    Data        0
   157                           ;!    BSS         0
   158                           ;!    Persistent  0
   159                           ;!    Stack       0
   160                           ;!
   161                           ;!Auto Spaces:
   162                           ;!    Space          Size  Autos    Used
   163                           ;!    COMMON            0      0       0
   164                           ;!    BANK0            14      7       7
   165                           
   166                           ;!
   167                           ;!Pointer List with Targets:
   168                           ;!
   169                           ;!    None.
   170                           
   171                           
   172                           ;!
   173                           ;!Critical Paths under _main in COMMON
   174                           ;!
   175                           ;!    None.
   176                           ;!
   177                           ;!Critical Paths under _main in BANK0
   178                           ;!
   179                           ;!    None.
   180                           
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   183 ;;
   184                           
   185                           ;!
   186                           ;!Call Graph Tables:
   187                           ;!
   188                           ;! ---------------------------------------------------------------------------------
   189                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   190                           ;! ---------------------------------------------------------------------------------
   191                           ;! (0) _main                                                 7     3      4       0
   192                           ;!                                              0 BANK0      7     3      4
   193                           ;! ---------------------------------------------------------------------------------
   194                           ;! Estimated maximum stack depth 0
   195                           ;! ---------------------------------------------------------------------------------
   196                           ;!
   197                           ;! Call Graph Graphs:
   198                           ;!
   199                           ;! _main (ROOT)
   200                           ;!
   201                           
   202                           ;! Address spaces:
   203                           
   204                           ;!Name               Size   Autos  Total    Cost      Usage
   205                           ;!BITCOMMON            0      0       0       0        0.0%
   206                           ;!NULL                 0      0       0       0        0.0%
   207                           ;!CODE                 0      0       0       0        0.0%
   208                           ;!BITSFR0              0      0       0       1        0.0%
   209                           ;!SFR0                 0      0       0       1        0.0%
   210                           ;!COMMON               0      0       0       1        0.0%
   211                           ;!STACK                0      0       0       2        0.0%
   212                           ;!BANK0                E      7       7       3       50.0%
   213                           ;!ABS                  0      0       0       4        0.0%
   214                           ;!DATA                 0      0       0       5        0.0%
   215                           ;!BITBANK0             E      0       0       6        0.0%
   216                           
   217                           	global	_main
   218                           
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 26 in file "main.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;  argc            2    0[BANK0 ] int 
   224 ;;  argv            2    2[BANK0 ] PTR PTR unsigned char 
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  2    0[BANK0 ] int 
   229 ;; Registers used:
   230 ;;		wreg, fsr0l, fsr0h, status,2
   231 ;; Tracked objects:
   232 ;;		On entry : B00/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0
   236 ;;      Params:         0       4
   237 ;;      Locals:         0       0
   238 ;;      Temps:          0       3
   239 ;;      Totals:         0       7
   240 ;;Total ram usage:        7 bytes
   241 ;; This function calls:
   242 ;;		Nothing
   243 ;; This function is called by:
   244 ;;		Startup code after reset
   245 ;; This function uses a non-reentrant model
   246 ;;
   247                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   248                           	file	"main.c"
   249                           	line	26
   250                           global __pmaintext
   251                           __pmaintext:	;psect for function _main
   252  003                     psect	maintext
   253                           	file	"main.c"
   254                           	line	26
   255                           	global	__size_of_main
   256                           	__size_of_main	equ	__end_of_main-_main
   257  0026                     	
   258                           _main:	
   259  003                     ;incstack = 0
   260                           	opt	stack 2
   261                           ; Regs used in _main: [wreg-fsr0h+status,2]
   262                           	line	28
   263                           	
   264                           l523:	
   265  003                     ;main.c: 28:     OPTION = 0b00000000;
   266                           	movlw	0
   267  003  C00                	option
   268  004  002                	line	29
   269                           	
   270                           l525:	
   271  005                     ;main.c: 29:     OSCCALbits.FOSC4 = 0;
   272                           	bcf	(5),0	;volatile
   273  005  405                	line	30
   274                           	
   275                           l527:	
   276  006                     ;main.c: 30:     TRISGPIO = 0b00000010;
   277                           	movlw	low(02h)
   278  006  C02                	tris	0x6
   279  007  006                	goto	l529
   280  008  A09                	line	32
   281                           ;main.c: 32:     while (1) {
   282                           	
   283                           l15:	
   284  009                     	line	38
   285                           	
   286                           l529:	
   287  009                     ;main.c: 38:         GPIO = 0b00000100;
   288                           	movlw	low(04h)
   289  009  C04                	movwf	(6)	;volatile
   290  00A  026                	line	39
   291                           	
   292                           l531:	
   293  00B                     ;main.c: 39:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   294                           	opt asmopt_push
   295                           opt asmopt_off
   296                           movlw  11
   297  00B  C0B                movwf	((??_main+0)+0+2),f
   298  00C  036                movlw	38
   299  00D  C26                movwf	((??_main+0)+0+1),f
   300  00E  035                	movlw	93
   301  00F  C5D                movwf	((??_main+0)+0),f
   302  010  034                	u17:
   303  011                     decfsz	((??_main+0)+0),f
   304  011  2F4                	goto	u17
   305  012  A11                	decfsz	((??_main+0)+0+1),f
   306  013  2F5                	goto	u17
   307  014  A11                	decfsz	((??_main+0)+0+2),f
   308  015  2F6                	goto	u17
   309  016  A11                	nop2
   310  017  A18                opt asmopt_pop
   311                           
   312                           	line	40
   313                           	
   314                           l533:	
   315  018                     ;main.c: 40:         GPIO = 0b00000000;
   316                           	clrf	(6)	;volatile
   317  018  066                	line	41
   318                           	
   319                           l535:	
   320  019                     ;main.c: 41:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   321                           	opt asmopt_push
   322                           opt asmopt_off
   323                           movlw  11
   324  019  C0B                movwf	((??_main+0)+0+2),f
   325  01A  036                movlw	38
   326  01B  C26                movwf	((??_main+0)+0+1),f
   327  01C  035                	movlw	93
   328  01D  C5D                movwf	((??_main+0)+0),f
   329  01E  034                	u27:
   330  01F                     decfsz	((??_main+0)+0),f
   331  01F  2F4                	goto	u27
   332  020  A1F                	decfsz	((??_main+0)+0+1),f
   333  021  2F5                	goto	u27
   334  022  A1F                	decfsz	((??_main+0)+0+2),f
   335  023  2F6                	goto	u27
   336  024  A1F                	nop2
   337  025  A26                opt asmopt_pop
   338                           
   339                           	goto	l529
   340  026  A09                	line	43
   341                           ;main.c: 43:     }
   342                           	
   343                           l16:	
   344  027                     	goto	l529
   345  027  A09                	
   346                           l17:	
   347  028                     	line	45
   348                           ;main.c: 44:     return (0);;	Return value of _main is never used
   349                           	
   350                           l18:	
   351  028                     	global	start
   352                           	ljmp	start
   353  028  A00                	opt stack 0
   354                           GLOBAL	__end_of_main
   355                           	__end_of_main:
   356  029                     	signat	_main,8314
   357                           global	___latbits
   358                           ___latbits	equ	0
   359  0000                     	global	btemp
   360                           	btemp set 01Ch
   361  001C                     
   362                           	DABS	1,28,4	;btemp
   363                           	global	wtemp0
   364                           	wtemp0 set btemp+0
   365  001C                     	global	wtemp1
   366                           	wtemp1 set btemp+2
   367  001E                     	global	ttemp0
   368                           	ttemp0 set btemp+0
   369  001C                     	global	ltemp0
   370                           	ltemp0 set btemp+0
   371  001C                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            14      7       7

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4       0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0                E      7       7       3       50.0%
ABS                  0      0       0       4        0.0%
DATA                 0      0       0       5        0.0%
BITBANK0             E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Nov 17 18:54:20 2019

            __CFG_CP$OFF 0000                       l15 0009                       l16 0027  
                     l17 0028                       l18 0028                       u17 0011  
                     u27 001F                       fsr 0004                      l531 000B  
                    l523 0003                      l533 0018                      l525 0005  
                    l535 0019                      l527 0006                      l529 0009  
           __CFG_MCPU$ON 0000                     _GPIO 0006                     _main 0003  
                   btemp 001C                     start 0000            __CFG_MCLRE$ON 0000  
                  ?_main 0010            __CFG_WDTE$OFF 0000                    ltemp0 001C  
                  ttemp0 001C                    wtemp0 001C                    wtemp1 001E  
        __initialization 0001             __end_of_main 0029                   ??_main 0014  
                 _OPTION 0000  __end_of__initialization 0001               __pmaintext 0003  
   end_of_initialization 0001      start_initialization 0001         __CFG_IOSCFS$8MHZ 0000  
              ___latbits 0000            __pcstackBANK0 0010                 _TRISGPIO 0006  
          __size_of_main 0026                 main@argc 0010                 main@argv 0012  
             _OSCCALbits 0005  
